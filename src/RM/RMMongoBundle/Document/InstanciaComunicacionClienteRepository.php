<?php

namespace RM\RMMongoBundle\Document;

use Doctrine\ODM\MongoDB\DocumentRepository;

/**
 * InstanciaComunicacionClienteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InstanciaComunicacionClienteRepository extends DocumentRepository
{
    /**
     * @param $id_cliente
     * @param $id_instancia
     * @param $id_slot
     * @return array
     * @throws \Exception
     */
    public function findByClienteIntanciaSlot($id_cliente, $id_instancia, $id_slot)
    {
        if(!$id_cliente || !$id_instancia || !$id_slot){
            throw new \Exception(sprintf("Faltan argumentos"));
        }

        return $this->findBy([
                'id_instancia'  => $id_instancia,
                'id_cliente'    => $id_cliente,
                'id_slot'       => $id_slot
            ]);
    }

    /**
     * @param $id_slot
     * @return array
     * @throws \Exception
     */
    public function findBySlot($id_slot)
    {
        if(!$id_slot) {
            throw new \Exception("Argumento no valido");
        }

        return $this->findBy([
                'id_slot' => $id_slot
            ]);
    }

    /**
     * @param $id_cliente
     * @param $id_instancia
     * @return array
     * @throws \Exception
     */
    public function findByClienteInstancia($id_cliente, $id_instancia)
    {
        if(!$id_instancia || !$id_cliente) {
            throw new \Exception("Argumento no valido");
        }

        return $this->findBy([
                'id_instancia' => $id_instancia,
                'id_cliente'   => $id_cliente,
            ]);
    }

    /**
     * @param $id_instancia
     * @return array
     */
    public function findIdClienteByInstancia($id_instancia)
    {
        $query = $this->createQueryBuilder()
            ->hydrate(false)
            ->distinct('cli')
            ->field('i')->equals($id_instancia)
            ->getQuery();


        $clientes = $query->execute();

        return iterator_to_array($clientes);

    }

    public function findClientesByIdClienteInstancia(array $ids_clientes, $id_instancia)
    {
        $query = $this->createQueryBuilder()
            ->hydrate(false)
            ->distinct('cli')
            ->field('i')->equals($id_instancia)
            ->field('cli')->in($ids_clientes)
            ->getQuery();


        $clientes = $query->execute();

        return iterator_to_array($clientes);
    }

}